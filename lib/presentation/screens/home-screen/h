import 'package:flutter/material.dart';
import 'package:parking_app/presentation/constants/colors.dart';
import 'package:parking_app/presentation/widgets/parking_slot.dart';

class HomeScreen extends StatelessWidget {
  const HomeScreen({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Smart parking App"),
      ),
      body: const Padding(
        padding: EdgeInsets.all(12.0),
        child: Center(
          child: Column(
            children: [
              SizedBox(height: 60),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Column(
                    children: [Text("ENTRY"), Icon(Icons.keyboard_arrow_down)],
                  ),
                ],
              ),
              Row(
                children: [
                  Expanded(
                    child: ParkingSlot(
                      isParked: true,
                      isBooked: true,
                      slotName: 'A1',
                      slotId: '1',
                      time: '10:00 AM',
                    ),
                  ),
                  SizedBox(
                    width: 60,
                    height: 60,
                    child: VerticalDivider(
                      color: blueColor,
                      thickness: 1,
                    ),
                  ),
                  Expanded(
                    child: ParkingSlot(
                      isParked: false,
                      isBooked: false,
                      slotName: 'A2',
                      slotId: '2',
                      time: '10:00 AM',
                    ),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}




 // print("Abc - 1");

    // DatabaseReference databaseReference =
    //     FirebaseDatabase.instance.reference().child(sensorName);

    // // Subscribe to changes in the database reference
    // databaseReference.onValue.listen((event) {
    //   print("Abc - 2");

    //   DataSnapshot dataSnapshot = event.snapshot;
    //   dynamic sensorValue = dataSnapshot.value;

    //   // Update state based on sensor name
    //   setState(() {
    //     if (sensorName == 'SENSOR1') {
    //       // Assuming SENSOR1 value is boolean
    //       valueS1 = sensorValue as bool? ??
    //           false; // Use default value if sensorValue is null
    //     } else if (sensorName == 'SENSOR2') {
    //       // Assuming SENSOR2 value is boolean
    //       valueS2 = sensorValue as bool? ??
    //           false; // Use default value if sensorValue is null
    //     }
    //     print('$sensorName: $sensorValue');
    //   });
    // });